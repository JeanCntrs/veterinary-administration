{"version":3,"sources":["reducers/meetingReducer.js","reducers/validationReducer.js","reducers/index.js","store.js","localStorage.js","components/MeetingForm.js","actions/validationAction.js","actions/meetingAction.js","components/MeetingList.js","App.js","serviceWorker.js","index.js"],"names":["initialState","meeting","error","combineReducers","state","action","type","payload","filter","element","id","meetingStorage","localStorage","getItem","undefined","JSON","parse","getStorageState","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","meetingState","stringify","setItem","setStorageState","getState","MeetingForm","useState","pet","setPet","owner","setOwner","date","setDate","hour","setHour","symptom","setSymptom","dispatch","useDispatch","validateForm","validateFormAction","currentState","useSelector","className","onSubmit","event","preventDefault","trim","uuid","addMeetingAction","placeholder","value","onChange","target","MeetingList","message","Object","keys","length","map","key","onClick","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0fd77d4.chunk.js","sourcesContent":["const initialState = {\r\n    meeting: []\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_MEETING':\r\n            return {\r\n                ...state,\r\n                meeting: [...state.meeting, action.payload]\r\n            }\r\n        case 'DELETE_MEETING':\r\n            return {\r\n                ...state,\r\n                meeting: state.meeting.filter(element => element.id !== action.payload)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    error: false\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FORM_VALIDATION':\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport meetingReducer from './meetingReducer';\r\nimport validationReducer from './validationReducer';\r\n\r\nexport default combineReducers({\r\n    meeting: meetingReducer,\r\n    error: validationReducer\r\n});","import { createStore } from 'redux';\r\nimport reducer from './reducers'; // Carga index.js por defecto\r\nimport { getStorageState, setStorageState } from './localStorage';\r\n\r\nconst initialState = getStorageState();\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nstore.subscribe(() => {\r\n    setStorageState({\r\n        meeting: store.getState().meeting\r\n    });\r\n});\r\n\r\nexport default store;","export const getStorageState = () => {\r\n    const meetingStorage = localStorage.getItem('meetings');\r\n    const response = meetingStorage === null ? undefined : JSON.parse(meetingStorage);\r\n    return response\r\n}\r\n\r\nexport const setStorageState = state => {\r\n    const meetingState = JSON.stringify(state);\r\n    localStorage.setItem('meetings', meetingState);\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addMeetingAction } from '../actions/meetingAction';\r\nimport { validateFormAction } from '../actions/validationAction';\r\nimport uuid from 'uuid/v4';\r\n\r\nconst MeetingForm = () => {\r\n\r\n    const [pet, setPet] = useState('');\r\n    const [owner, setOwner] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [hour, setHour] = useState('');\r\n    const [symptom, setSymptom] = useState('');\r\n\r\n    // dispatch ejecuta nuestras acciones \r\n    const dispatch = useDispatch();\r\n    const addMeeting = meeting => dispatch(addMeetingAction(meeting));\r\n    const validateForm = state => dispatch(validateFormAction(state));\r\n\r\n    // useSelector es similar a mapStateToProps, pero usando hooks\r\n    const currentState = useSelector(state => state.error);\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (pet.trim() === '' || owner.trim() === '' || date.trim() === '' || hour.trim() === '' || symptom.trim() === '') {\r\n            validateForm(true);\r\n            return;\r\n        } else {\r\n            validateForm(false);\r\n            addMeeting({ id: uuid(), pet, owner, date, hour, symptom });\r\n            setPet('');\r\n            setOwner('');\r\n            setDate('');\r\n            setHour('');\r\n            setSymptom('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card mt-5\">\r\n            <div className=\"card-body\">\r\n                <h2 className=\"card-title text-center mb-5\">Agrega las citas aqui</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-4 col-lg-2 col-form-label\">Nombre Mascota</label>\r\n                        <div className=\"col-sm-8 col-lg-10\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre Mascota\"\r\n                                value={pet}\r\n                                onChange={event => {\r\n                                    return (\r\n                                        setPet(event.target.value)\r\n                                    )\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-4 col-lg-2 col-form-label\">Nombre Dueño</label>\r\n                        <div className=\"col-sm-8 col-lg-10\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre Dueño de la Mascota\"\r\n                                value={owner}\r\n                                onChange={event => setOwner(event.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-4 col-lg-2 col-form-label\">Fecha</label>\r\n                        <div className=\"col-sm-8 col-lg-4  mb-4 mb-lg-0\">\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                                value={date}\r\n                                onChange={event => setDate(event.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <label className=\"col-sm-4 col-lg-2 col-form-label\">Hora</label>\r\n                        <div className=\"col-sm-8 col-lg-4\">\r\n                            <input\r\n                                type=\"time\"\r\n                                className=\"form-control\"\r\n                                value={hour}\r\n                                onChange={event => setHour(event.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-4 col-lg-2 col-form-label\">Sintomas</label>\r\n                        <div className=\"col-sm-8 col-lg-10\">\r\n                            <textarea\r\n                                className=\"form-control\"\r\n                                value={symptom}\r\n                                onChange={event => setSymptom(event.target.value)}\r\n                            ></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row justify-content-end\">\r\n                        <div className=\"col-sm-3\">\r\n                            <button type=\"submit\" className=\"btn btn-success w-100\">Agregar</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                {currentState.error ? <div className=\"alert alert-danger text-center p2\">Todos los campos son obligatorios</div> : null}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MeetingForm;","export const validateFormAction = state => {\r\n    return {\r\n        type: 'FORM_VALIDATION',\r\n        payload: state\r\n    }\r\n}","export const addMeetingAction = meeting => {\r\n    return {\r\n        type: 'ADD_MEETING',\r\n        payload: meeting\r\n    }\r\n}\r\n\r\nexport const deleteMeetingAction = id => {\r\n    return {\r\n        type: 'DELETE_MEETING',\r\n        payload: id\r\n    }\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteMeetingAction } from '../actions/meetingAction';\r\n\r\nconst MeetingList = () => {\r\n\r\n    const currentState = useSelector(state => state.meeting);\r\n    const message = Object.keys(currentState.meeting).length === 0 ? 'No hay citas' : 'Administra las citas aquí';\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"card mt-5\">\r\n            <div className=\"card-body\">\r\n                <h2 className=\"card-title text-center\">{message}</h2>\r\n                <div className=\"lista-citas\">\r\n                    {currentState.meeting.map(element => (\r\n                        <div key={element.id} className=\"media mt-3\">\r\n                            <div className=\"media-body\">\r\n                                <h3 className=\"mt-0\">{element.pet}</h3>\r\n                                <p className=\"card-text\"><span>Nombre Dueño: </span>{element.owner}</p>\r\n                                <p className=\"card-text\"><span>Fecha: </span>{element.date}</p>\r\n                                <p className=\"card-text\"><span>Hora: </span>{element.hour}</p>\r\n                                <p className=\"card-text\"><span>Sintomas: </span><br />{element.symptom}</p>\r\n                                <button className=\"btn btn-danger\" onClick={() => dispatch(deleteMeetingAction(element.id))}>Eliminar &times;</button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MeetingList;","import React from 'react';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\nimport MeetingForm from './components/MeetingForm';\r\nimport MeetingList from './components/MeetingList';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <div className=\"container mt-4\">\r\n                <header>\r\n                    <h1 className=\"text-center\">Administrador de Pacientes en Veterinaria</h1>\r\n                </header>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-6\">\r\n                        <MeetingForm />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <MeetingList />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}